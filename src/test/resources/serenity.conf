# serenity.conf

webdriver {
  driver = chrome
  # Puedes añadir tiempos de espera globales aquí.
  # Esto es útil para todo el proyecto.
  timeouts {
    implicitlyWait = 5000
    fluentWait = 10000
  }
}

drivers {
  chrome {
    # Cuando usas WebDriverManager, no necesitas especificar la ruta del driver.
    # WebDriverManager lo descarga y lo configura automáticamente.
    # Por lo tanto, puedes comentar o eliminar la siguiente línea si usas WebDriverManager.
    # driver = "path/to/your/chromedriver.exe"

    # La 'driver-class' está bien para asegurar que se use la implementación de ChromeDriver
    # pero a menudo Serenity la infiere correctamente si 'driver = chrome'.
    driver-class = "org.openqa.selenium.chrome.ChromeDriver"

    # Propiedades específicas para el navegador Chrome.
    # Puedes añadir argumentos de inicio, por ejemplo:
    switches = "--start-maximized;--incognito;--disable-gpu"
    # Otras opciones:
    # capabilities {
    #   "goog:chromeOptions" {
    #     args = ["--headless", "--disable-gpu"]
    #   }
    # }
  }
  # No necesitas tener bloques para otros drivers si solo usas Chrome.
  # Si tuvieras un driver Gecko (Firefox), luciría así:
  # firefox {
  #   driver-class = "org.openqa.selenium.firefox.FirefoxDriver"
  #   driver = "path/to/your/geckodriver.exe" # Si no usas WebDriverManager para Firefox
  # }
}

serenity {
  # Configuración de captura de pantalla. FOR_FAILURES es un buen punto de partida.
  take.screenshots = FOR_FAILURES
  # Otros reportes o configuraciones de Serenity
  # output.directory = "target/site/serenity"
}

# Aquí puedes poner otras configuraciones de Serenity específicas de tu proyecto
# Por ejemplo, la base URL si tus pruebas la usan.
# environment {
#   default {
#     base.url = "https://www.google.com"
#   }
# }